<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
             http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Realm实现 -->
	<bean id="statelessRealm" class="com.ai.shiro.StatelessRealm">
		<property name="cachingEnabled" value="false" />
	</bean>
	<bean id="webRealm" class="com.ai.shiro.WebRealm">
		<property name="cachingEnabled" value="false" />
	</bean>
	<!-- 权限认证策略 -->
	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy" />
		</property>
	</bean>

	<!-- Subject工厂 -->
	<!-- <bean id="subjectFactory" class="com.ai.shiro.StatelessDefaultSubjectFactory" 
		/> -->
	<bean id="subjectFactory" class="org.apache.shiro.web.mgt.DefaultWebSubjectFactory" />

	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
		<!-- <property name="sessionValidationSchedulerEnabled" value="false" /> -->
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="authenticator" ref="authenticator"></property>
		<property name="realms">
			<list>
				<ref bean="statelessRealm"/>
				<ref bean="webRealm"/>
			</list>
		</property>
		<property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled"
			value="false" />
		<property name="subjectFactory" ref="subjectFactory" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- 过滤器 -->
	<bean id="statelessAuthcFilter" class="com.ai.shiro.StatelessAuthcFilter" />
	<bean id="webAuthcFilter" class="com.ai.shiro.WebAuthcFilter" />
	
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="filters">
			<util:map>
				<entry key="statelessAuthc" value-ref="statelessAuthcFilter" />
				<entry key="webAucthc" value-ref="webAuthcFilter"/>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/** = webAucthc
				<!-- /**=authc -->
				<!-- /Web/*=webAucthc -->
				<!-- /**=anon -->
				<!-- /**=statelessAuthc -->
				<!-- /**=webAucthc -->
			</value>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>  