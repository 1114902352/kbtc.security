<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
             http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Realm实现 负责获取安全实体的数据源，可以是JDBC、Redis -->
	<bean id="webRealm" class="com.ai.shiro.web.WebRealm">
		<property name="cachingEnabled" value="true" />
	</bean>
	<!-- 权限认证策略 -->
	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy" />
		</property>
	</bean>
	<!-- Subject工厂 -->
	<bean id="subjectFactory" class="org.apache.shiro.web.mgt.DefaultWebSubjectFactory" />
	<!-- 过滤器 -->
	<bean id="appAuthcFilter" class="com.ai.shiro.app.AppAuthcFilter" />
	<bean id="webAuthcFilter" class="com.ai.shiro.web.WebAuthcFilter" />
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login.jsp" />
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="webRealm" />
			</list>
		</property>
		<property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled"
			value="true" />
		<property name="subjectFactory" ref="subjectFactory" />
		<!-- <property name="sessionManager" ref="sessionManager" /> -->
		<!-- <property name="cacheManager" ref="cacheManager" /> -->
	</bean>

	<!-- Redis实现的session -->
	<!-- ===========================================start============================== -->
	<bean id="redisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="expire" value="1800" />
		<property name="timeout" value="10000" />
	</bean>
	<!-- 获取redis数据的Dao -->
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>
	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="3600000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionDAO" ref="redisSessionDAO" />
	</bean>
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
	<!-- ===========================================end============================== -->


	<!-- 普通shiro权限 过滤器 -->
	<!-- ===========================================start============================== -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/success.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="securityManager" ref="securityManager" />
		<property name="filters">
			<util:map>
				<entry key="webAucthc" value-ref="webAuthcFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/logout = logout
				/web/toSuccess = webAucthc
				/show.jsp = roles[adminstration]
				/web/reduce = perms[adminstration:update]
				/test.jsp = roles[adminstration]
			</value>
		</property>
	</bean>
	<!-- ===========================================end============================== -->

	<!-- 动态URL权限 过滤器 -->
	<!-- ===========================================start============================== -->
	<!-- <bean id="filterChainManager" class="com.ai.shiro.common.CustomDefaultFilterChainManager"> 
		<property name="loginUrl" value="/login.jsp" /> <property name="successUrl" 
		value="/success.jsp" /> <property name="unauthorizedUrl" value="/unauthorized.jsp" 
		/> <property name="customFilters"> <util:map> <entry key="authc" value-ref="webAuthcFilter" 
		/> <entry key="logout" value-ref="logout"/> </util:map> </property> <property 
		name="defaultFilterChainDefinitions"> <value> /logout = logout /web/toSuccess 
		= authc </value> </property> </bean> <bean id="filterChainResolver" class="com.ai.shiro.common.CustomPathMatchingFilterChainResolver"> 
		<property name="customDefaultFilterChainManager" ref="filterChainManager" 
		/> </bean> <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean"> 
		<property name="securityManager" ref="securityManager" /> </bean> <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="targetObject" ref="shiroFilter" /> <property name="targetMethod" 
		value="setFilterChainResolver" /> <property name="arguments" ref="filterChainResolver" 
		/> </bean> -->
	<!-- ===========================================end============================== -->


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>  