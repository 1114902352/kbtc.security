<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.secruity.dao.ResInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ai.secruity.model.ResInfo" >
    <id column="RES_ID" property="resId" jdbcType="BIGINT" />
    <result column="RES_ICON" property="resIcon" jdbcType="VARCHAR" />
    <result column="RES_NAME" property="resName" jdbcType="VARCHAR" />
    <result column="RES_RMK" property="resRmk" jdbcType="VARCHAR" />
    <result column="RES_URL" property="resUrl" jdbcType="VARCHAR" />
    <result column="RES_PID" property="resPid" jdbcType="VARCHAR" />
    <result column="RES_SEQ" property="resSeq" jdbcType="VARCHAR" />
    <result column="RES_TYPE" property="resType" jdbcType="VARCHAR" />
    <result column="RES_PERM" property="resPerm" jdbcType="VARCHAR" />
    <result column="RMK1" property="rmk1" jdbcType="VARCHAR" />
    <result column="RMK2" property="rmk2" jdbcType="VARCHAR" />
    <result column="RMK3" property="rmk3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RES_ID, RES_ICON, RES_NAME, RES_RMK, RES_URL, RES_PID, RES_SEQ, RES_TYPE, RES_PERM, 
    RMK1, RMK2, RMK3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.secruity.model.ResInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_res_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_res_info
    where RES_ID = #{resId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_res_info
    where RES_ID = #{resId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ai.secruity.model.ResInfo" >
    insert into t_res_info (RES_ID, RES_ICON, RES_NAME, 
      RES_RMK, RES_URL, RES_PID, 
      RES_SEQ, RES_TYPE, RES_PERM, 
      RMK1, RMK2, RMK3)
    values (#{resId,jdbcType=BIGINT}, #{resIcon,jdbcType=VARCHAR}, #{resName,jdbcType=VARCHAR}, 
      #{resRmk,jdbcType=VARCHAR}, #{resUrl,jdbcType=VARCHAR}, #{resPid,jdbcType=VARCHAR}, 
      #{resSeq,jdbcType=VARCHAR}, #{resType,jdbcType=VARCHAR}, #{resPerm,jdbcType=VARCHAR}, 
      #{rmk1,jdbcType=VARCHAR}, #{rmk2,jdbcType=VARCHAR}, #{rmk3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.secruity.model.ResInfo" >
    insert into t_res_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resId != null" >
        RES_ID,
      </if>
      <if test="resIcon != null" >
        RES_ICON,
      </if>
      <if test="resName != null" >
        RES_NAME,
      </if>
      <if test="resRmk != null" >
        RES_RMK,
      </if>
      <if test="resUrl != null" >
        RES_URL,
      </if>
      <if test="resPid != null" >
        RES_PID,
      </if>
      <if test="resSeq != null" >
        RES_SEQ,
      </if>
      <if test="resType != null" >
        RES_TYPE,
      </if>
      <if test="resPerm != null" >
        RES_PERM,
      </if>
      <if test="rmk1 != null" >
        RMK1,
      </if>
      <if test="rmk2 != null" >
        RMK2,
      </if>
      <if test="rmk3 != null" >
        RMK3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resId != null" >
        #{resId,jdbcType=BIGINT},
      </if>
      <if test="resIcon != null" >
        #{resIcon,jdbcType=VARCHAR},
      </if>
      <if test="resName != null" >
        #{resName,jdbcType=VARCHAR},
      </if>
      <if test="resRmk != null" >
        #{resRmk,jdbcType=VARCHAR},
      </if>
      <if test="resUrl != null" >
        #{resUrl,jdbcType=VARCHAR},
      </if>
      <if test="resPid != null" >
        #{resPid,jdbcType=VARCHAR},
      </if>
      <if test="resSeq != null" >
        #{resSeq,jdbcType=VARCHAR},
      </if>
      <if test="resType != null" >
        #{resType,jdbcType=VARCHAR},
      </if>
      <if test="resPerm != null" >
        #{resPerm,jdbcType=VARCHAR},
      </if>
      <if test="rmk1 != null" >
        #{rmk1,jdbcType=VARCHAR},
      </if>
      <if test="rmk2 != null" >
        #{rmk2,jdbcType=VARCHAR},
      </if>
      <if test="rmk3 != null" >
        #{rmk3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.secruity.model.ResInfo" >
    update t_res_info
    <set >
      <if test="resIcon != null" >
        RES_ICON = #{resIcon,jdbcType=VARCHAR},
      </if>
      <if test="resName != null" >
        RES_NAME = #{resName,jdbcType=VARCHAR},
      </if>
      <if test="resRmk != null" >
        RES_RMK = #{resRmk,jdbcType=VARCHAR},
      </if>
      <if test="resUrl != null" >
        RES_URL = #{resUrl,jdbcType=VARCHAR},
      </if>
      <if test="resPid != null" >
        RES_PID = #{resPid,jdbcType=VARCHAR},
      </if>
      <if test="resSeq != null" >
        RES_SEQ = #{resSeq,jdbcType=VARCHAR},
      </if>
      <if test="resType != null" >
        RES_TYPE = #{resType,jdbcType=VARCHAR},
      </if>
      <if test="resPerm != null" >
        RES_PERM = #{resPerm,jdbcType=VARCHAR},
      </if>
      <if test="rmk1 != null" >
        RMK1 = #{rmk1,jdbcType=VARCHAR},
      </if>
      <if test="rmk2 != null" >
        RMK2 = #{rmk2,jdbcType=VARCHAR},
      </if>
      <if test="rmk3 != null" >
        RMK3 = #{rmk3,jdbcType=VARCHAR},
      </if>
    </set>
    where RES_ID = #{resId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.secruity.model.ResInfo" >
    update t_res_info
    set RES_ICON = #{resIcon,jdbcType=VARCHAR},
      RES_NAME = #{resName,jdbcType=VARCHAR},
      RES_RMK = #{resRmk,jdbcType=VARCHAR},
      RES_URL = #{resUrl,jdbcType=VARCHAR},
      RES_PID = #{resPid,jdbcType=VARCHAR},
      RES_SEQ = #{resSeq,jdbcType=VARCHAR},
      RES_TYPE = #{resType,jdbcType=VARCHAR},
      RES_PERM = #{resPerm,jdbcType=VARCHAR},
      RMK1 = #{rmk1,jdbcType=VARCHAR},
      RMK2 = #{rmk2,jdbcType=VARCHAR},
      RMK3 = #{rmk3,jdbcType=VARCHAR}
    where RES_ID = #{resId,jdbcType=BIGINT}
  </update>
</mapper>